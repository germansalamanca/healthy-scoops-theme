{%- liquid
  assign margin = section.settings.margin | split: ','
  assign margin_top = margin[0]
  assign margin_bottom = margin[1]
  assign padding = section.settings.padding | split: ','
  assign padding_top = padding[0]
  assign padding_bottom = padding[1]

  if section.settings.enable_overlay
  assign section_overlay = 'dt-sc-overlay'
  endif

  if section.settings.show_background_image
  assign lazyScript = "lazyload"
  endif
  assign number_of_comments = article.comments_count
  if comment and comment.created_at
  assign number_of_comments = article.comments_count | plus: 1
  endif
%}

<div class="dt-sc-blog-single">
  <div class="dt-sc-section-wrapper  {{ lazyScript }} {{ section_overlay }} {% if section.settings.background_style == 'parallax' %} parallax-initiated{% endif %}" {% if section.settings.background_style == 'parallax' %} data-speed="2" data-style="parallax"{% endif %} style="{% render 'bg-color-image-padding' %} background-size: {{- section.settings.background_size -}}; {% if section.settings.background_style == 'fixed' %}background-attachment: fixed;{% endif %} background-repeat:{% if section.settings.background_size == 'repeat' %}repeat{% else %}no-repeat;{% endif %}" {% render 'bg_image' %}>  
    <div class="{% render 'container-settings' %}">          
      <div class="row"> 
        <article class="dt-sc-blog-item">
          {% if article.image %}       
          <div class="dt-sc-blog-image">      
          <img
            srcset="{%- if article.image.src.width >= 165 -%}{{ article.image.src | image_url: width: 165 }} 165w,{%- endif -%}
              {%- if article.image.src.width >= 360 -%}{{ article.image.src | image_url: width: 360 }} 360w,{%- endif -%}
              {%- if article.image.src.width >= 533 -%}{{ article.image.src | image_url: width: 533 }} 533w,{%- endif -%}
              {%- if article.image.src.width >= 720 -%}{{ article.image.src | image_url: width: 720 }} 720w,{%- endif -%}
              {%- if article.image.src.width >= 1000 -%}{{ article.image.src | image_url: width: 1000 }} 1000w,{%- endif -%}
              {%- if article.image.src.width >= 1500 -%}{{ article.image.src | image_url: width: 1500 }} 1500w,{%- endif -%}
              {{ article.image.src | image_url }} {{ article.image.src.width }}w"
            src="{{ article.image.src | image_url: width: 1500 }}"
            sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px, (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)"
            alt="{{ article.image.src.alt | escape }}"
            class="motion-reduce"
            loading="lazy"
            width="{{ article.image.width }}"
            height="{{ article.image.height }}"
          >
          </div>
          {% endif %}
          <div class="dt-sc-blog-description">
            <h2>{{ article.title }}</h2>
            <div class="dt-sc-blog-meta">
              {% if section.settings.show_blog_date %}
              <p class="dt-sc-blog-date">
                {% render 'icon-date' %} 
                <span data-datetime="{{ article.published_at | date: '%Y-%m-%d' }}"><span class="date">{{ article.published_at | date: '%b' }} {{ article.published_at | date: '%d' }}, {{ article.published_at | date: '%Y' }}</span></span>             
              </p>
              {% endif %}

              {% if article.comments_enabled? %}
              {% assign number_of_comments = article.comments_count %}
              <p class="dt-sc-blog-comment">
                {% render 'icon-comment' %} {{ 'blogs.comments.comments_with_count' | t: count: article.comments_count }}
              </p>
              {% endif %}
              {% if section.settings.show_blog_author %}            
              <p class="dt-sc-blog-author">                
                {% render 'icon-author' %}
                <span>{{ article.author }}</span>
              </p> 
              {% endif %}          
            </div>

            <p>{{ article.content }}</p>

            <div class="dt-sc-blog-meta-group">
              {%- if article.tags.size > 0 and section.settings.show_blog_tag -%}
              <div class="dt-sc-blog-tags">
                {% render 'icon-tag' %}
                {% for tag in article.tags %}
                <a class="blog-tags" href="{{ blog.url }}/tagged/{{ tag | handle }}">{{ tag }}</a>{% unless forloop.last %}<span class="meta-sep">,</span>{% endunless %}
                {% endfor %}
              </div>
              {%- endif -%}

              {%- if section.settings.social_sharing_blog -%}  
              {% render 'social-sharing' %}
              {%- endif -%}
            </div>

            {% if blog.next_article or blog.previous_article %}
            <div class="dt-sc-blog-navigation">
              {% if blog.previous_article %}
              <div class="prev">
                {{ 'blogs.article.older_post' | t | link_to: blog.previous_article }}
              </div>    
              {% endif %}

              {% if blog.next_article %}
              <div class="next">
                {{ 'blogs.article.newer_post' | t | link_to: blog.next_article }}
              </div>
              {% endif %}
            </div>
            {% endif %}
            {% if blog.comments_enabled? %}
            <div id="dt-sc-comments">
              {% if comment and comment.created_at %}
              <p class="note form-success">
                {% if blog.moderated? %}
                {{ 'blogs.comments.success_moderated' | t }}
                {% else %}
                {{ 'blogs.comments.success' | t }}
                {% endif %}
              </p>
              {% endif %}

              {% if number_of_comments > 0 %}
              {% paginate article.comments by 5 %}
              <h5 class="dt-sc-total-comments"> {% if blog.comments_enabled? %}
                {% assign number_of_comments = article.comments_count %}
                <span class="dt-sc-comments-count">{% render 'icon-comment' %}{{ 'blogs.comments.comments_with_count' | t: count: article.comments_count }}</span>
                {% endif %}  
              </h5>
              <ul>               
                {% if comment.status == 'pending' %}
                <li id="{{ comment.id }}" class="dt-sc-comment">
                  {% render 'comment', comment: comment %}
                </li>
                {% endif %}

                {% for comment in article.comments %}
                <li id="{{ comment.id }}" class="dt-sc-comment {% unless number_of_comments > article.comments_count %}{% if forloop.first %} first{% endif %}{% endunless %}{% if forloop.last %} last {% endif %}">
                  {% render 'comment', comment: comment %}
                </li>
                {% endfor %}
              </ul>
              {% if paginate.pages > 1 %}
              <div class="text-center">
                {% render 'blog-pagination' %}
              </div>
              {% endif %}
              {% endpaginate %}
              {% endif %}

              {% form 'new_comment', article %}

              <h4 class="dt-sc-comments-title">{{ 'blogs.comments.title' | t }}</h4>

              {{ form.errors | default_errors }}
              <div class="dt-sc-comment-form-fields">
                <div class="dt-sc-column two-column">
                  <div>
                    <label for="CommentAuthor" class="label--hidden">{{ 'blogs.comments.name' | t }}</label>
                    <input {% if form.errors contains "author" %} class="error"{% endif %} type="text" name="comment[author]" placeholder="{{ 'blogs.comments.name' | t }}" id="CommentAuthor" value="{{ form.author }}" autocapitalize="words">
                  </div>
                  <div>
                    <label for="CommentEmail" class="label--hidden">{{ 'blogs.comments.email' | t }}</label>
                    <input {% if form.errors contains "email" %} class="error"{% endif %} type="email" name="comment[email]" placeholder="{{ 'blogs.comments.email' | t }}" id="CommentEmail" value="{{ form.email }}" autocorrect="off" autocapitalize="off">
                  </div>
                </div>
                <div>
                  <label for="CommentBody" class="label--hidden">{{ 'blogs.comments.message' | t }}</label>
                  <textarea {% if form.errors contains "body" %} class="error"{% endif %} name="comment[body]" id="CommentBody" placeholder="{{ 'blogs.comments.message' | t }}">{{ form.body }}</textarea>
                </div>
              </div>
              {% if blog.moderated? %}
              <p><small>{{ 'blogs.comments.moderated' | t }}</small></p>
              {% endif %}
              <button type="submit" class="btn"><span>{{ 'blogs.comments.post' | t }}</span></button>
              {% endform %}
            </div>
            {% endif %}

          </div>
        </article>
      </div>
    </div>
  </div>
</div>


<style>

  .dt-sc-blog-navigation { width: 100%; display: flex; flex-wrap: wrap; justify-content: space-between; margin: 30px 0 40px; overflow: hidden; border-radius: var(--DTRadius);  }
  .dt-sc-blog-navigation > div:only-child,
  .dt-sc-blog-navigation > div:only-child a { text-align: center; }
.dt-sc-blog-navigation > div:only-child{ width: 25%; margin:0 auto;}
 

  .dt-sc-blog-navigation > div a { padding: 10px 25px; display: inline-block; }

  .dt-sc-blog-navigation > div.prev a { border-right: 1px solid var(--DTPrimaryColor);border: 1px solid var(--DTPrimaryColor);    white-space: nowrap; }
  .dt-sc-blog-navigation > div.next a { border-left: 1px solid var(--DTPrimaryColor); border: 1px solid var(--DTPrimaryColor);}

  

  .dt-sc-blog-navigation > div a:hover { background: var(--DT_Button_BG_Hover_Color); color: var(--DT_Button_Text_Hover_Color); border: 1px solid var(--DT_Button_BG_Hover_Color); }

  .dt-sc-blog-image a img { border-radius: var(--DTRadius); }

  .dt-sc-blog-single .dt-sc-blog-item { display: flex; flex-direction: column; justify-content: center; align-items: center;  }
  
  .dt-sc-blog-single .dt-sc-blog-item .dt-sc-blog-image { margin-bottom: 2.5rem; }
  
  .dt-sc-blog-single .dt-sc-blog-meta { font-size: 16px; }

  .dt-sc-blog-single .dt-sc-blog-meta,
  .dt-sc-blog-single .dt-sc-comments-meta,
  .dt-sc-blog-single .dt-sc-blog-meta-group { color: {{ settings.blog_text_color }}; color: {{ section.settings.blog_meta_color }}; }

  .dt-sc-blog-single .dt-sc-blog-meta .dt-sc-blog-comment svg,
  .dt-sc-blog-single .dt-sc-comments-count svg,
  .dt-sc-blog-single .dt-sc-blog-date svg,
  .dt-sc-blog-single .dt-sc-blog-author svg,
  .dt-sc-blog-single .dt-sc-blog-meta-group svg { margin-right: 8px; color: {{ settings.blog_icon_color }}; color: {{ section.settings.blog_meta_icon_color }}; }

  .dt-sc-blog-single .dt-sc-blog-meta .dt-sc-blog-comment,
  .dt-sc-blog-single .dt-sc-comments-count,
  .dt-sc-blog-single .dt-sc-blog-date,
  .dt-sc-blog-single .dt-sc-blog-author { display: flex; align-items: center; flex-wrap: wrap;  text-transform: capitalize; }

  .dt-sc-blog-single .dt-sc-blog-meta-group { margin-top: 10px; display: flex; flex-wrap: wrap; justify-content: space-between; margin-bottom: 30px; width: 100%;
float: left; font-size: var(--DTFontSize_H6); }
  
  .dt-sc-blog-single .dt-sc-blog-meta-group:empty { display: none; }
  
  .dt-sc-blog-single .dt-sc-blog-meta-group .social-sharing { margin: 0; width: auto;  }
  .dt-sc-blog-single .dt-sc-blog-meta-group .social-sharing .social_share_title { max-width: none; margin-right: 5px; font-family: var(--DTFontTypo_Body); letter-spacing: 0; }
  .dt-sc-blog-single .dt-sc-blog-meta-group .social-sharing .product-label { max-width: none; }
  .dt-sc-blog-single .dt-sc-blog-meta-group .social-sharing > a[class*="share"] { font-size: 14px; }

  .dt-sc-blog-single .dt-sc-blog-meta { display: flex; flex-wrap: wrap; align-items: center; }
  .dt-sc-blog-single .dt-sc-blog-meta > p { margin-bottom: 15px; }
  .dt-sc-blog-single .dt-sc-blog-meta > p:not(:last-child) { margin-right: 15px; }

  .dt-sc-comments-meta { width: 100%; display: flex; flex-wrap: wrap; justify-content: flex-start; border-bottom: 1px solid var(--DTTertiaryColor);
    margin-bottom: 15px; padding-bottom: 15px; }
  .dt-sc-comments-meta > p { margin-bottom: 0; }
  .dt-sc-comments-meta > p:not(:last-child) { margin-right: 15px; }

  .dt-sc-comments-section { 
    box-shadow: var(--DTboxShadow_light); background: var(--DTBodyBGColor); padding: 20px; border-radius: var(--DTRadius); margin-bottom: 30px; width: calc(100% - 25px);
      }

  #dt-sc-comments {  padding: 30px 0; border-radius: var(--DTRadius); width: 100%; float: left; }
#dt-sc-comments .dt-sc-column {
    grid-gap: 30px;
}
  #dt-sc-comments .comment-form { position: relative; }
  #dt-sc-comments .comment-form .dt-sc-comments-title { margin-top: 0; margin-bottom: var(--DTGutter_Width); }
  #dt-sc-comments .comment-form button.btn { margin: 0; float: right; }

  #dt-sc-comments .comment-form > p small { position: absolute; width: 50%; }

  #dt-sc-comments .dt-sc-comment-form-fields { margin-bottom: calc(.5 * var(--DTGutter_Width)); }
  #dt-sc-comments .dt-sc-comment-form-fields label { margin-bottom: 5px; width: 100%; float: left; display: none; }

  #dt-sc-comments .dt-sc-total-comments { margin-top: 0; margin-bottom: var(--DTGutter_Width); font-size: var(--DTFontSize_H4); 
    font-weight: var(--font-weight-header);
      }

  #dt-sc-comments > ul { counter-reset: dt-sc-accordion-counter; }
  #dt-sc-comments > ul li { counter-increment: dt-sc-accordion-counter; display: flex; flex-wrap: wrap; }
  #dt-sc-comments > ul li:before { display: block; position: relative; content: counter(dt-sc-accordion-counter, decimal)'.'; width: 25px; align-self: flex-start;
    margin-top: 22px; 
  } 

  
  @media (max-width: 1200px) {  
    .dt-sc-blog-single .dt-sc-blog-item { padding: 0; }
  }

  @media (min-width: 1200px) { 
    .dt-sc-blog-description{ width:{{ section.settings.dt-sc-blog-description-width }}%; }
    .main-article-template .dt-sc-section-wrapper{ margin-top:{{ margin_top }}px; margin-bottom:{{ margin_bottom }}px;padding-top:{{ padding_top }}px; padding-bottom:{{ padding_bottom }}px; }
  }

  @media only screen and (max-width: 1199px) {
    .main-article-template .dt-sc-section-wrapper{ margin-top:{{ margin_top | divided_by: 2 }}px; margin-bottom:{{ margin_bottom | divided_by: 2 }}px;padding-top:{{ padding_top | divided_by: 2 }}px; padding-bottom:{{ padding_bottom | divided_by: 2 }}px;}
  }

  @media (max-width: 767px) {

    #dt-sc-comments .dt-sc-comment-form-fields .dt-sc-column.two-column { display: grid; }
    #dt-sc-comments .dt-sc-comment-form-fields .dt-sc-column.two-column > div { width: 100%; } 

    #dt-sc-comments .dt-sc-total-comments { font-size: calc(.85 * var(--DTFontSize_H4)); }

  }
  
  .dt-sc-blog-item .dt-sc-blog-meta svg{display:block}
  
  .dt-sc-blog-meta > *{font-weight:700}
  @media (max-width: 576px) {

    .dt-sc-blog-single .dt-sc-blog-meta-group { flex-direction: column; }
    .dt-sc-blog-single .dt-sc-blog-meta-group > div { margin-bottom: 10px; }

    .dt-sc-blog-navigation > div a { padding: 10px 20px; }

    #dt-sc-comments { padding: 20px; }

    .dt-sc-comments-meta > p { width: 100%; }
    .dt-sc-comments-meta > p:not(:last-child) { margin-bottom: 10px; }
    
    #dt-sc-comments .comment-form > p small { position: relative; width: 100%; transform: translateY(-10px); -webkit-transform: translateY(-10px); float: left; }
    #dt-sc-comments .comment-form button.btn { float: left; }

    /*     #dt-sc-comments .dt-sc-comment-form-fields .dt-sc-column.two-column { display: flex; } */

  }


</style>

{% schema %}
{
"name": "Blog Page",
"class": "main-article-template",
"settings": [
{
"type": "checkbox",
"id": "full",
"label": "Show Full width"
},
{
"type": "checkbox",
"id": "spacing_both_ends",
"label": "Enable Right & Left Spacing (Works only on Fullwidth)",
"default": false
},

{
"type": "range",
"id": "dt-sc-blog-description-width",
"label":"Description width", 
"min": 50,
"max": 100,
"step": 1,
"unit": "%",
"default":60
},

{
"type": "text",
"id": "padding",
"label": "Style value (Padding)",
"default":"0,0",
"info":"Top(px),Bottom(px)"
},
{
"type": "text",
"id": "margin",
"label": "Style value (Margin)",
"default":"0,0",
"info":"Top(px),Bottom(px)"
},
{
"type": "header",
"content": "Blog Settings"
},
{
"type": "checkbox",
"id": "show_blog_author",
"label": "Enable Blog author name"
},

{
"type": "checkbox",
"id": "show_blog_date",
"label": "Enable Blog date"
},
{
"type": "checkbox",
"id": "show_blog_tag",
"label": "Enable Blog tag"
},
{
"type": "checkbox",
"id": "social_sharing_blog",
"label": "Enable Blog Social Share"
},
{
"type": "color",
"id": "blog_meta_color",
"label": "Blog Meta Color",
"default": "#1a1a1a"
},
{
"type": "color",
"id": "blog_meta_icon_color",
"label": "Blog Meta Icon Color",
"default": "#206469"
}
]
}
{% endschema %}